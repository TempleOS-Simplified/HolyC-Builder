#!/bin/bash
export DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1

if [[ "$#" == 3 ]]; then
    if [[ "$1" = "--build" ]]; then
        /usr/local/lib/redseagen $2 $3
    else
        printf "\033[33;1mHolyC Builder\033[0m\n"
        printf "\033[3mA wrapper for xSlendi's RedSeaGen\033[0m\n\n"
        echo "Usage:"
        echo "  holyc --build [directory] [output]"
        echo "  holyc --init"
    fi
elif [[ "$#" == 2 ]]; then
    if [[ "$1" = "--run" ]]; then
        if [ -d "virt" ]; then
            /usr/local/lib/redseagen $2 virt/output.ISO.C
            if pgrep -x "qemu-system-x86" > /dev/null
            then
                echo "QEMU Already Running."
            else
                qemu-system-x86_64 -m 512M -enable-kvm -drive file="virt/temple" -cdrom virt/output.ISO.C > /dev/null 2>&1 & disown
            fi
            
        else
            echo "No 'virt' directory found. Try running --init"
        fi
    fi

elif [[ "$#" == 1 ]]; then
    if [[ "$1" = "--init" ]]; then
        echo "Creating a TempleOS VM in QEMU."
        mkdir virt
        qemu-img create -f qcow2 virt/temple 2G
        echo "PRESS 'Y' TWICE THEN A KEY. WHEN ASKED TO REBOOT, PRESS N, AND MANUALLY QUIT"
        qemu-system-x86_64 -m 512M -enable-kvm -drive file="virt/temple" -cdrom /usr/local/lib/templeos.iso -boot order=d > /dev/null 2>&1
        echo "Virtual machine created. You may now use --run"
    fi
else
    
    printf "\033[33;1mHolyC Builder\033[0m\n"
    printf "\033[3mA wrapper for Slendi's RedSeaGen\033[0m\n\n"
    echo "Usage:"
    echo "  holyc --build [directory] [output]"
    echo "  holyc --init"
    echo "  holyc --run [directory] (REQUIRES INIT TO HAVE BEEN RUN)"
fi
